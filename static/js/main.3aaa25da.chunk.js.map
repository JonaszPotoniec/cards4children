{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","files","numberOfImages","combinations","settings","setSettings","bind","loadFile","removeFile","changeNumber","calculateCombinations","setting","event","temp","this","target","value","setState","concat","URL","createObjectURL","set","k","i","j","combs","head","tailcombs","length","push","slice","splice","x","className","images","React","Component","Configuration","convertToPng","convertToAllPng","node","document","getElementById","htmlToImage","toPng","then","dataUrl","link","createElement","download","href","click","Array","from","children","map","id","type","onChange","min","e","key","onClick","src","alt","max","step","padding","gap","Preview","combination","index","style","gridTemplateColumns","Math","ceil","sqrt","gridTemplateRows","gridGap","links","linkIndex","transform","random","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3aaa25da.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport htmlToImage from 'html-to-image';\n\nclass App extends React.Component  {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      numberOfImages: 1,\n      combinations: [],\n      settings: {\n        \"gap\": 2\n      }\n    }\n\n    this.setSettings = this.setSettings.bind(this);\n    this.loadFile = this.loadFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.changeNumber = this.changeNumber.bind(this);\n    this.calculateCombinations = this.calculateCombinations.bind(this);\n  }\n\n  setSettings(setting,event){\n    let temp = this.state.settings;\n    temp[setting] = event.target.value;\n    this.setState({\n      settings: temp\n    })\n  }\n\n  loadFile(event){\n    this.setState({\n      files: this.state.files.concat(URL.createObjectURL(event.target.files[0]))\n    }, this.calculateCombinations)\n  }\n\n  calculateCombinations(){\n    this.setState({\n      combinations: this.combinations(this.state.files, this.state.numberOfImages)\n    })\n  }\n\n  combinations(set, k) {\n    var i, j, combs, head, tailcombs;\n    if (k > set.length || k <= 0) {\n        return [];\n    }\n    if (k === set.length) {\n        return [set];\n    }\n    if (k === 1) {\n        combs = [];\n        for (i = 0; i < set.length; i++) {\n            combs.push([set[i]]);\n        }\n        return combs;\n    }\n    combs = [];\n    for (i = 0; i < set.length - k + 1; i++) {\n        head = set.slice(i, i+1);\n        tailcombs = this.combinations(set.slice(i + 1), k - 1);\n        for (j = 0; j < tailcombs.length; j++) {\n            combs.push(head.concat(tailcombs[j]));\n        }\n    }\n    return combs;\n  }\n\n  removeFile(i){\n    let temp = this.state.files;\n    temp.splice(i, 1);\n\n    this.setState({\n      files: temp\n    }, this.calculateCombinations)\n  }\n\n  changeNumber(x){\n    this.setState({\n      numberOfImages: x.target.value\n    }, this.calculateCombinations)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Configuration\n          images={this.state.files}\n          loadFile={this.loadFile}\n          removeFile={this.removeFile}\n          changeNumber={this.changeNumber}\n          numberOfImages={this.state.numberOfImages}\n          setSettings={this.setSettings}\n          settings={this.state.settings}\n        />\n        <Preview\n          combinations={this.state.combinations}\n          numberOfImages={this.state.numberOfImages}\n          settings={this.state.settings}\n        />\n      </div>\n    );\n  }\n}\n\nclass Configuration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: []\n    }\n    this.convertToPng = this.convertToPng.bind(this);\n    this.convertToAllPng = this.convertToAllPng.bind(this);\n  }\n\n  convertToPng(){\n    var node = document.getElementById('Preview');\n\n    htmlToImage.toPng(node)\n      .then((dataUrl) => {\n        var link = document.createElement('a');\n        link.download = 'obrazki.png';\n        link.href = dataUrl;\n        link.click();\n      });\n  }\n\n  convertToAllPng(){\n    Array.from(document.getElementById('Preview').children).map((node, i) => {\n      htmlToImage.toPng(node)\n        .then((dataUrl) => {\n          var link = document.createElement('a');\n          link.download = 'image-'+(i+1)+'.png';\n          link.href = dataUrl;\n          link.click();\n        });\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"ConfigurationMenu\">\n        <div>\n          <div>\n            <input type=\"file\" onChange={this.props.loadFile}/>\n          </div>\n        </div>\n        <div>\n          Liczba obrazk√≥w: <input type=\"number\" min={1} value={this.props.numberOfImages} onChange={this.props.changeNumber}/>\n        </div>\n        <div id=\"ImagePreview\">\n          {\n            this.props.images.map((e, i) => {\n              return (\n                <div key={i}>\n                  <button onClick={() => this.props.removeFile(i)}>X</button>\n                  <img src={e} alt={\"Photo number \"+i} />\n                </div>\n              )\n            })\n          }\n        </div>\n        <form id=\"SlidersForm\">\n          Padding: <input type=\"range\"  min={1} max={8} step={0.1} value={this.props.settings.padding} onChange={this.props.setSettings.bind(this, \"padding\")}/>\n          Gap: <input type=\"range\"  min={0} max={10} step={0.1} value={this.props.settings.gap} onChange={this.props.setSettings.bind(this, \"gap\")}/>\n        </form>\n        <div>\n          <button onClick={this.convertToPng} className=\"menuButton\">Pobierz razem</button>\n          <button onClick={this.convertToAllPng} className=\"menuButton\">Pobierz oddzielnie</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Preview extends React.Component {\n\n  render() {\n\n    return (\n      <div id=\"Preview\">\n        {\n          this.props.combinations.map((combination, index) => {\n            return <div key={index} className=\"card\" style={{\n                gridTemplateColumns: \"repeat(\"+Math.ceil(Math.sqrt(this.props.numberOfImages))+\", auto)\",\n                gridTemplateRows: \"repeat(\"+Math.ceil(Math.sqrt(this.props.numberOfImages))+\", auto)\",\n                gridGap: this.props.settings.gap + \"em\",\n                padding: this.props.settings.padding + \"em\"\n              }}>\n              {\n                combination.map((links, linkIndex) => {\n                  return <img src={links} key={linkIndex} alt=\"links\" style={{transform: \"rotate(\"+Math.ceil(Math.random()*360)+\"deg)\"}}/>\n                })\n              }\n            </div>\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}